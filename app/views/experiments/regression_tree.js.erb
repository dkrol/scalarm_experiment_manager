//input parameters: experiment, moe_name, tree_nodes
i = rt_chart_tab.length;
$("#regression_charts").prepend("<div id='rt_chart_"+i+"'></div>");

rt_chart_tab[i] = $("#rt_chart_" + i);

<% if @chart.tree_nodes %>

function init_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>(experiment_id, moe_name) {
  console.log("Init");
  // init tree data
  var json_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %> = <%= raw(json_rt_node(@chart.tree_nodes[1], @chart.tree_nodes)) %>;

  //init Spacetree
  //Create a new ST instance
  var st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %> = new $jit.ST({
    //id of viz container element
    injectInto: 'infovis_' + experiment_id + "_" + moe_name,
    orientation: 'top',
    duration: 800,
    transition: $jit.Trans.Quart.easeInOut,
    levelDistance: 50,

    Navigation: {
      enable:true,
      panning:true
    },

    Node: {
      height: 40,
      width: 300,
      type: 'rectangle',
      color: 'white',
      overridable: true,
      textAlign: 'center'
    },

    Edge: {
      type: 'bezier',
      textAlign: 'center',
      overridable: true
    },

    //This method is called on DOM label creation.
    //Use this method to add event handlers and styles to
    //your node.
    onCreateLabel: function(label, node) {
      label.id = node.id + "_" + experiment_id + "_" + moe_name;
//    if this is not a leaf node
	  var separation_index = node.name.indexOf("|");

      if(node.name.charAt(node.name.length - 1) != '|') {
          label.innerHTML =  "<img src='<%= image_path('add-icon.png') %>' onClick=\"" +
            "show_dialog_for_new_parameter_value('" + node.data["param_id"] + "','" + node.data["param_label"] +
                  "','<%= parameter_values_experiment_path(@chart.experiment.experiment_id) %>', '<%= @chart.experiment.experiment_id %>')" +
            " \" /> ";
      }

      label.innerHTML += node.name.substring(0, separation_index) + "<br/>" + node.name.substring(separation_index + 1);
      label.onclick = function(e) {
        st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.onClick(node.id)
      };
      //set label styles
      var style = label.style;
      style.width = '300px';
      style.height = '40px';
      style.cursor = 'pointer';
      style.color = '#333';
      style.fontSize = '1em';
      style.textAlign= 'center';
      style.paddingTop = '3px';
    },

    onBeforePlotLine: function(adj) {
      if (adj.nodeFrom.selected && adj.nodeTo.selected) {
        adj.data.$color = "blue";
        adj.data.$lineWidth = 3;
      } else {
        delete adj.data.$color;
        delete adj.data.$lineWidth;
      }
    }
  });
  //load json data
  st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.loadJSON(json_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>);
  //compute node positions and layout
  st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.compute();
  //optional: make a translation of the tree
  st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.geom.translate(new $jit.Complex(-200, 0), "current");
  //emulate a click on the root node.
  st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.onClick(st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>.root);

  var targetOffset =  $('#infovis_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>').parent().parent().offset().top;
  $('html,body').animate({scrollTop: targetOffset}, 1000);

  rt_vis_tab["<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>"] = st_<%= "#{@chart.experiment.experiment_id}_#{@chart.moe_name}" %>;
}

$('div#rt_chart_' + i).html("<%= escape_javascript( render partial: 'regression_tree_chart', locals: { chart: @chart } ) %>")
<% end %>

$('#busy_rt').hide();